version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - telegram-bot
      - aggregator

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - telegram-bot
      - aggregator

  prometheus:
    image: prom/prometheus:v2.53.1
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - aggregator-service
      - collector-service
      - telegram-bot
    networks:
      - aggregator
      - telegram-bot

  grafana:
    image: grafana/grafana-oss:11.1.3
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    links:
      - prometheus:prometheus
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: password
    networks:
      - aggregator
      - telegram-bot

  postgres-aggregator:
    image: postgres:15.6
    container_name: postgres-aggregator
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: aggregator
    ports:
      - "5432:5432"
    networks:
      - aggregator-postgres

  postgres-bot:
    image: postgres:15.6
    container_name: postgres-bot
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: bot
    ports:
      - "5433:5432"
    networks:
      - telegram-bot

  eureka-server:
    image: halcyons/eureka-server:latest
    container_name: eureka-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8761:8761"
    networks:
      - aggregator

  aggregator-service:
    image: halcyons/aggregator-service:latest
    container_name: aggregator-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - zookeeper
      - postgres-aggregator
      - eureka-server
    networks:
      - aggregator
      - aggregator-postgres

  collector-service:
    image: halcyons/collector-service:latest
    container_name: collector-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8081:8081"
    depends_on:
      - kafka
      - zookeeper
      - eureka-server
    networks:
      - aggregator

  telegram-bot:
    image: halcyons/telegram-bot:latest
    container_name: telegram_bot
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8083:8083"
    depends_on:
      - kafka
      - zookeeper
      - postgres-bot
      - eureka-server
    networks:
      - telegram-bot
      - aggregator

networks:
  telegram-bot:
    driver: bridge

  aggregator:
    driver: bridge

  aggregator-postgres:
    driver: bridge

volumes:
  postgres-bot:
  postgres-aggregator: